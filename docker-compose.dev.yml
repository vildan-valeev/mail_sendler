version: '3.7'

services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mailsendler

  db:
    image: postgres
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
#      POSTGRES_MULTIPLE_DATABASES: sentry,myproject

    volumes:
      - ./pg_data/db:/var/lib/postgresql/data

    ports:
      - "5432:5432"
    networks:
      - mailsendler

  app:
    container_name: app
    build:
      context: .
      dockerfile: app/Dockerfile
    #    command: sh -c "poetry run python manage.py migrate --no-input && poetry run python manage.py runserver 0.0.0.0:8000"
    entrypoint: /app/entrypoint.sh
    env_file:
      - ./app/.env.dev
    ports:
      - 8000:8000
    volumes:
      - ./app:/app/
    networks:
      - mailsendler
    depends_on:
      - redis
      - db

  celery_worker:
    restart: always
    build:
      context: .
      dockerfile: app/Dockerfile
    command: "celery -A src worker -l info --pool=solo"
    container_name: celery_worker
    env_file:
      - ./app/.env.dev
    volumes:
      - ./app:/app/
    depends_on:
      - redis
      - db
      - app
    networks:
      - mailsendler


#  celery-beat:
#    build:
#      context: .
#      dockerfile: app/Dockerfile
#    command: celery -A src beat -l info
##    container_name: celery_beat
#    env_file:
#      - ./app/.env.dev
#    volumes:
#      - ./app:/app/
#    depends_on:
#      - app
#      - redis
#      - db
#      - celery_worker
#    networks:
#      - mailsendler

networks:
  mailsendler:
    driver: bridge
